
/**
 * Utility functions for clearing letter data from storage
 */

/**
 * Clear all letter-related data from session and local storage
 */
export const clearAllLetterData = (): void => {
  console.log("Clearing ALL letter data from storage");
  
  // Clear all letter data from session storage
  sessionStorage.removeItem('pendingDisputeLetter');
  sessionStorage.removeItem('generatedDisputeLetters');
  sessionStorage.removeItem('autoGeneratedLetter');
  sessionStorage.removeItem('reportReadyForLetters');
  sessionStorage.removeItem('forceLetterGeneration');
  sessionStorage.removeItem('letterGenerationTime');
  sessionStorage.removeItem('generationComplete');
  sessionStorage.removeItem('hasDisputeLetters');
  sessionStorage.removeItem('fallbackLetterUsed');
  sessionStorage.removeItem('lettersAlreadyLoaded'); 
  sessionStorage.removeItem('generatedLetters'); // Clear old generic letters
  
  // Clear any flags that might trigger letter generation
  sessionStorage.removeItem('shouldNavigateToLetters');
  sessionStorage.removeItem('forceLettersReload');
  sessionStorage.removeItem('navigationInProgress');
  sessionStorage.removeItem('analysisComplete');
  sessionStorage.removeItem('reportAnalyzed');
  
  // Also clear from local storage for completeness
  localStorage.removeItem('pendingDisputeLetter');
  localStorage.removeItem('generatedDisputeLetters');
  localStorage.removeItem('reportData');
  localStorage.removeItem('disputeLetters');
  localStorage.removeItem('generatedLetters'); // Clear old generic letters
  
  console.log("Letter data cleared successfully");
};

/**
 * Clear old letter data to force regeneration with new comprehensive system
 */
export const clearOldLetterData = (): void => {
  const itemsToClear = [
    'generatedLetters',
    'disputeLetters', 
    'autoGeneratedLetter',
    'pendingLetter',
    'fallbackLetterUsed',
    'creditReportLetters'
  ];

  itemsToClear.forEach(item => {
    sessionStorage.removeItem(item);
    localStorage.removeItem(item);
  });

  console.log('Cleared old letter data from storage - will force regeneration with comprehensive system');
};

/**
 * Force regeneration of letters by clearing cached data
 */
export const forceLetterRegeneration = (): void => {
  clearOldLetterData();
  
  // Also clear any cached report analysis that might be outdated
  sessionStorage.removeItem('creditReportAnalysis');
  sessionStorage.removeItem('reportAnalysisComplete');
  
  console.log('Forced letter regeneration by clearing cached data');
};

/**
 * Force a complete reset of all data and reload the page
 * This is a "nuclear option" for when other clearing methods fail
 */
export const forceClearAndReload = (): void => {
  console.log("FORCE CLEARING all data and reloading page");
  
  // Clear all letter data
  clearAllLetterData();
  
  // Clear ALL session storage (complete reset)
  sessionStorage.clear();
  
  // Clear report-related items from local storage
  localStorage.removeItem('creditReportData');
  localStorage.removeItem('reportData');
  localStorage.removeItem('disputeTargetAccount');
  localStorage.removeItem('reportStorageTime');
  
  // Set a flag that we're doing a force reload
  sessionStorage.setItem('forceReload', 'true');
  
  // Force reload the page after a brief delay
  setTimeout(() => {
    window.location.reload();
  }, 100);
};

/**
 * Check if any letter data exists in storage
 */
export const hasLetterData = (): boolean => {
  return !!(
    sessionStorage.getItem('pendingDisputeLetter') ||
    sessionStorage.getItem('generatedDisputeLetters') ||
    sessionStorage.getItem('autoGeneratedLetter') ||
    localStorage.getItem('pendingDisputeLetter') ||
    localStorage.getItem('generatedDisputeLetters') ||
    localStorage.getItem('disputeLetters')
  );
};
