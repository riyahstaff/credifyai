
export const determineBureau = (bureauString: string): string => {
  const lowerBureau = bureauString.toLowerCase();
  if (lowerBureau.includes('experian')) {
    return 'Experian';
  } else if (lowerBureau.includes('equifax')) {
    return 'Equifax';
  } else if (lowerBureau.includes('transunion')) {
    return 'TransUnion';
  }
  return 'Experian'; // Default
};

export const verifyLetterStorage = (): boolean => {
  console.log("Verifying letter storage:");
  
  // Check for generated letters in storage
  const pendingLetter = sessionStorage.getItem('pendingDisputeLetter');
  const generatedLetters = sessionStorage.getItem('generatedDisputeLetters');
  const autoGeneratedLetter = sessionStorage.getItem('autoGeneratedLetter');
  
  console.log("- pendingDisputeLetter exists:", !!pendingLetter);
  console.log("- generatedDisputeLetters exists:", !!generatedLetters);
  console.log("- autoGeneratedLetter flag:", autoGeneratedLetter);
  
  if ((pendingLetter || generatedLetters) && autoGeneratedLetter === 'true') {
    console.log("Letter verified in storage, navigating to dispute letters page");
    return true;
  }
  
  return false;
};

export const forceNavigateToLetters = (navigate: any, testMode = false): void => {
  console.log("Force navigating to dispute letters page");
  
  // Set flag to force reload on letters page to ensure it reads the latest session storage
  sessionStorage.setItem('forceLettersReload', 'true');
  
  try {
    // Create a comprehensive letter with all the key details to ensure routing works
    console.log("Creating comprehensive letter before navigation");
    const comprehensiveLetter = {
      content: sessionStorage.getItem('pendingDisputeLetter') 
        ? JSON.parse(sessionStorage.getItem('pendingDisputeLetter') || '{}').content 
        : "Sample dispute letter content for verification.",
      letterContent: "Backup content for verification.",
      createdAt: new Date().toISOString(),
      bureau: "Experian",
      id: Date.now()
    };
    
    // Store this comprehensive letter to ensure the letters page has content
    sessionStorage.setItem('pendingDisputeLetter', JSON.stringify(comprehensiveLetter));
    console.log("Created and stored comprehensive letter before navigation");
  } catch (error) {
    console.error("Error creating comprehensive letter:", error);
  }
  
  console.log("Forcefully navigating to dispute letters page");
  
  // Navigate with the test mode parameter if needed
  navigate(`/dispute-letters${testMode ? '?testMode=true' : ''}`);
};
