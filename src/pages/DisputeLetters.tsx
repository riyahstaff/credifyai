
import React, { useEffect } from 'react';
import { useLocation } from 'react-router-dom';
import DisputeLettersPage from '../components/disputes/letters/DisputeLettersPage';
import { useToast } from '@/hooks/use-toast';

const DisputeLetters = () => {
  const { toast } = useToast();
  const location = useLocation();
  
  // Check if we're in test mode
  const searchParams = new URLSearchParams(location.search);
  const testMode = searchParams.get('testMode') === 'true';

  useEffect(() => {
    // Log test mode status
    if (testMode) {
      console.log("DisputeLetters page: Test mode is active");
    }
    
    // Check for any generated letters when this page loads
    const autoGeneratedFlag = sessionStorage.getItem('autoGeneratedLetter');
    const pendingLetter = sessionStorage.getItem('pendingDisputeLetter');
    const generatedLetters = sessionStorage.getItem('generatedDisputeLetters');
    
    console.log("[DisputeLetters] Checking for auto-generated letter flags");
    console.log("[DisputeLetters] autoGeneratedFlag:", autoGeneratedFlag);
    console.log("[DisputeLetters] pendingLetter:", pendingLetter ? "Present" : "Not present");
    console.log("[DisputeLetters] generatedLetters:", generatedLetters ? "Present" : "Not present");
    
    // Show appropriate toast if we have letters
    if (autoGeneratedFlag === 'true') {
      let letterCount = 0;
      
      if (generatedLetters) {
        try {
          const letters = JSON.parse(generatedLetters);
          letterCount = letters.length;
          console.log(`[DisputeLetters] Found ${letterCount} generated letters in session storage:`, letters);
        } catch (e) {
          console.error("Error parsing generated letters:", e);
        }
      } else if (pendingLetter) {
        letterCount = 1;
        console.log("[DisputeLetters] Found 1 pending letter in session storage");
      }
      
      if (letterCount > 0) {
        console.log(`[DisputeLetters] Showing toast for ${letterCount} letters`);
        toast({
          title: testMode ? "Test Letters Ready" : "Dispute Letters Ready",
          description: `${letterCount} dispute ${letterCount === 1 ? 'letter has' : 'letters have'} been generated based on your credit report analysis${testMode ? ' in test mode' : ''}.`,
          duration: 5000,
        });
      } else {
        // If the flag is true but no letters were found, show an error
        console.log("[DisputeLetters] No letters found despite flag being true");
        toast({
          title: "Letter Generation Issue",
          description: "There was a problem generating dispute letters. Please try again or contact support.",
          variant: "destructive",
          duration: 5000,
        });
      }
    }
  }, [toast, testMode]);

  return <DisputeLettersPage testMode={testMode} />;
};

export default DisputeLetters;
