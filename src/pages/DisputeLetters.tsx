
import React, { useEffect } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import DisputeLettersPage from '../components/disputes/letters/DisputeLettersPage';
import { useToast } from '@/hooks/use-toast';

const DisputeLetters = () => {
  const { toast } = useToast();
  const location = useLocation();
  const navigate = useNavigate();
  
  // Check if we're in test mode
  const searchParams = new URLSearchParams(location.search);
  const testMode = searchParams.get('testMode') === 'true';

  useEffect(() => {
    // Log test mode status
    if (testMode) {
      console.log("DisputeLetters page: Test mode is active");
    }
    
    // Check for any generated letters when this page loads
    const autoGeneratedFlag = sessionStorage.getItem('autoGeneratedLetter');
    const pendingLetter = sessionStorage.getItem('pendingDisputeLetter');
    const generatedLetters = sessionStorage.getItem('generatedDisputeLetters');
    const forceReload = sessionStorage.getItem('forceLettersReload');
    
    console.log("[DisputeLetters] Checking for auto-generated letter flags");
    console.log("[DisputeLetters] autoGeneratedFlag:", autoGeneratedFlag);
    console.log("[DisputeLetters] pendingLetter:", pendingLetter ? "Present" : "Not present");
    console.log("[DisputeLetters] generatedLetters:", generatedLetters ? "Present" : "Not present");
    console.log("[DisputeLetters] forceReload:", forceReload);
    
    // If force reload is set, remove it and refresh the page
    if (forceReload === 'true') {
      console.log("[DisputeLetters] Force reload detected, refreshing page");
      sessionStorage.removeItem('forceLettersReload');
      
      // Wait a bit to ensure storage operations complete
      setTimeout(() => {
        window.location.reload();
      }, 300);
      return;
    }
    
    // If there are no letters in session storage, notify the user
    if (autoGeneratedFlag === 'true' && !pendingLetter && !generatedLetters) {
      console.log("[DisputeLetters] Auto-generated flag is true but no letters found");
      toast({
        title: "No Letters Found",
        description: "We couldn't find any generated dispute letters. Please try generating them again.",
        variant: "destructive",
      });
      sessionStorage.removeItem('autoGeneratedLetter');
    }
  }, [toast, testMode, navigate]);

  return (
    <DisputeLettersPage testMode={testMode} />
  );
};

export default DisputeLetters;
