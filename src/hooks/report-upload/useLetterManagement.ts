
import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useToast } from '@/hooks/use-toast';
import { verifyLetterStorage } from '@/components/disputes/uploader/utils/bureauUtils';

export const useLetterManagement = () => {
  const { toast } = useToast();
  const navigate = useNavigate();
  const [hasPendingLetters, setHasPendingLetters] = useState(false);
  
  useEffect(() => {
    // Check if there are pending letters in storage
    const hasLetters = verifyLetterStorage();
    setHasPendingLetters(hasLetters);
  }, []);
  
  const clearPendingLetters = () => {
    try {
      // Remove all stored letters
      sessionStorage.removeItem('pendingDisputeLetter');
      sessionStorage.removeItem('generatedDisputeLetters');
      sessionStorage.removeItem('autoGeneratedLetter');
      sessionStorage.removeItem('disputeLettersTimestamp');
      sessionStorage.removeItem('forceLettersReload');
      
      setHasPendingLetters(false);
      
      toast({
        title: "Letters Cleared",
        description: "All pending dispute letters have been cleared.",
      });
      
      return true;
    } catch (error) {
      console.error("Error clearing pending letters:", error);
      
      toast({
        title: "Error",
        description: "Failed to clear pending letters. Please try again.",
        variant: "destructive",
      });
      
      return false;
    }
  };
  
  const handleContinueToLetters = () => {
    // Navigate to dispute letters page
    navigate('/dispute-letters');
  };
  
  const handleStartNewReport = () => {
    // Clear all pending letters before starting a new report
    const cleared = clearPendingLetters();
    
    if (cleared) {
      toast({
        title: "Starting New Report",
        description: "You can now upload a new credit report.",
      });
    }
  };
  
  return {
    hasPendingLetters,
    clearPendingLetters,
    handleContinueToLetters,
    handleStartNewReport
  };
};
