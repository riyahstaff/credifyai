
import { useState, useEffect } from 'react';
import { useToast } from '@/hooks/use-toast';
import { verifyLetterStorage } from '@/components/disputes/uploader/utils/bureauUtils';
import { useReportStorage } from './useReportStorage';

export const useLetterManagement = () => {
  const { toast } = useToast();
  const [hasPendingLetters, setHasPendingLetters] = useState(false);
  const reportStorage = useReportStorage();
  
  // Check for pending letters on initialization
  useEffect(() => {
    const hasLetters = verifyLetterStorage();
    setHasPendingLetters(hasLetters);
    
    if (hasLetters) {
      console.log("Found pending dispute letters in storage");
    }
  }, []);
  
  // Start a new report and clear any pending letters
  const handleStartNewReport = () => {
    // Clear any existing letter data
    clearPendingLetters();
    
    toast({
      title: "Starting New Report",
      description: "Any pending dispute letters have been cleared.",
    });
  };
  
  // Clear all pending letters
  const clearPendingLetters = () => {
    sessionStorage.removeItem('pendingDisputeLetter');
    sessionStorage.removeItem('generatedDisputeLetters');
    sessionStorage.removeItem('autoGeneratedLetter');
    
    // Clear account and report storage
    if (reportStorage && typeof reportStorage.clearStoredReport === 'function') {
      reportStorage.clearStoredReport();
    }
    
    setHasPendingLetters(false);
    console.log("Cleared all pending dispute letters from storage");
  };
  
  return {
    hasPendingLetters,
    handleStartNewReport,
    clearPendingLetters
  };
};
