
import { useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useToast } from '@/hooks/use-toast';

export const useReportNavigation = () => {
  const navigate = useNavigate();
  const { toast } = useToast();
  
  // Set up navigation listener for analysis completion
  useEffect(() => {
    // Create a MutationObserver to watch for the special console log
    const originalConsoleLog = console.log;
    console.log = function() {
      // Call the original console.log
      originalConsoleLog.apply(console, arguments);
      
      // Check if this is our special navigation trigger message
      if (arguments[0] === "ANALYSIS_COMPLETE_READY_FOR_NAVIGATION") {
        originalConsoleLog("Detected navigation trigger - redirecting to dispute letters page");
        setTimeout(() => {
          navigateToDisputeLetters();
        }, 500);
      }
    };
    
    return () => {
      // Restore original console.log when component unmounts
      console.log = originalConsoleLog;
    };
  }, [navigate]);

  // Navigate to dispute letters page with more forceful approach
  const navigateToDisputeLetters = () => {
    console.log("Forcefully navigating to dispute letters page");
    
    // Verify letters exist before navigating
    const pendingLetter = sessionStorage.getItem('pendingDisputeLetter');
    
    // If no letter exists, check if we have issue details to create one
    if (!pendingLetter) {
      const disputeDetails = sessionStorage.getItem('currentDisputeDetails');
      
      if (disputeDetails) {
        console.log("No letter found but dispute details exist. Creating emergency letter before navigation.");
        
        try {
          // Create a properly formatted letter
          const details = JSON.parse(disputeDetails);
          const currentDate = new Date().toLocaleDateString('en-US', {
            year: 'numeric', month: 'long', day: 'numeric'
          });
          
          const letter = {
            id: Date.now(),
            title: `${details.title} (${details.accountName || 'Unknown Account'})`,
            bureau: "Experian", // Default bureau
            recipient: "Experian",
            accountName: details.accountName || "Unknown Account",
            accountNumber: details.accountNumber || "",
            errorType: details.title,
            explanation: details.description,
            letterContent: generateEmergencyLetterContent(details),
            content: generateEmergencyLetterContent(details),
            status: 'draft',
            createdAt: new Date().toLocaleDateString('en-US', { 
              month: 'short', day: 'numeric', year: 'numeric' 
            }),
            bureaus: ["Experian"],
            laws: details.laws || ["FCRA ยง 611"],
            timestamp: new Date().toISOString()
          };
          
          // Store the letter
          sessionStorage.setItem('pendingDisputeLetter', JSON.stringify(letter));
          sessionStorage.setItem('generatedDisputeLetters', JSON.stringify([letter]));
          sessionStorage.setItem('autoGeneratedLetter', 'true');
          console.log("Created and stored emergency letter before navigation");
        } catch (e) {
          console.error("Error creating emergency letter:", e);
        }
      }
    }
    
    // Set flag to force reload on letters page
    sessionStorage.setItem('forceLettersReload', 'true');
    
    // Force navigation by updating the window location
    // This is more reliable than using React Router for this critical navigation
    window.location.href = '/dispute-letters';
  };
  
  // Helper function to generate emergency letter content
  const generateEmergencyLetterContent = (details: any) => {
    const currentDate = new Date().toLocaleDateString('en-US', {
      year: 'numeric', month: 'long', day: 'numeric'
    });
    
    return `${currentDate}

To Whom It May Concern:

I am writing to dispute the following information in my credit report:

- Account Name: ${details.accountName || 'Unknown Account'}
- Account Number: ${details.accountNumber || '[ACCOUNT NUMBER]'}
- Error Type: ${details.title}
- Description: ${details.description}

This information is inaccurate because: ${details.description}

Under Section 611 of the Fair Credit Reporting Act, you are required to investigate this dispute and correct or delete any information that cannot be verified as accurate.

Please investigate this matter and update my credit report accordingly.

Sincerely,
[YOUR NAME]

Applicable Laws:
${details.laws ? details.laws.join('\n') : 'FCRA ยง 611 (Fair Credit Reporting Act)'}
`;
  };

  return {
    navigateToDisputeLetters,
    navigate,
    toast
  };
};
