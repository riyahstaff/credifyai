
import { CreditReportAccount, CreditReportData } from '@/utils/creditReportParser';

export const useReportStorage = () => {
  // Check for pending letters
  const checkPendingLetters = (): { hasPendingLetter: boolean, autoGenerated: boolean } => {
    const pendingLetter = sessionStorage.getItem('pendingDisputeLetter');
    const autoGenerated = sessionStorage.getItem('autoGeneratedLetter');
    
    return { 
      hasPendingLetter: !!pendingLetter, 
      autoGenerated: autoGenerated === 'true'
    };
  };

  // Clear all pending letters and report data
  const clearPendingLetters = () => {
    // Remove all stored letter data
    sessionStorage.removeItem('pendingDisputeLetter');
    sessionStorage.removeItem('autoGeneratedLetter');
    sessionStorage.removeItem('generatedDisputeLetters');
    sessionStorage.removeItem('creditReportData');
    sessionStorage.removeItem('selectedAccount');
    
    console.log("Cleared all pending dispute letters and report data");
  };

  // Store data for dispute generation
  const storeForDispute = (reportData: CreditReportData, account?: CreditReportAccount) => {
    sessionStorage.setItem('creditReportData', JSON.stringify(reportData));
    
    // If account is provided, also store that
    if (account) {
      sessionStorage.setItem('selectedAccount', JSON.stringify(account));
    }
  };

  return {
    checkPendingLetters,
    clearPendingLetters,
    storeForDispute
  };
};
