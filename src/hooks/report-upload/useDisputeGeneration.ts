
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useToast } from '@/hooks/use-toast';
import { 
  verifyLetterStorage, 
  forceNavigateToLetters, 
  storeLetterInStorage 
} from '@/components/disputes/uploader/utils/bureauUtils';
import { DisputeGenerationResult } from '@/components/disputes/uploader/types/disputeTypes';

export const useDisputeGeneration = () => {
  const navigate = useNavigate();
  const { toast } = useToast();
  const [letterGenerated, setLetterGenerated] = useState(false);

  const handleDisputeGeneration = async (selectedIssue: any): Promise<DisputeGenerationResult> => {
    try {
      console.log("Starting dispute generation with extra verification");
      
      // This is a placeholder for the actual dispute generation logic
      // The actual implementation would depend on your application's needs
      const result = {
        success: true,
        disputeData: {
          // Dispute data properties would go here
          id: Date.now(),
          content: "Sample dispute letter content"
        }
      };
      
      if (result && result.success && result.disputeData) {
        console.log("Dispute generation successful, storing letter");
        storeLetterInStorage(result.disputeData);
        setLetterGenerated(true);
        
        setTimeout(() => {
          const hasLetters = verifyLetterStorage();
          if (hasLetters) {
            console.log("Letter verified in storage, navigating to dispute letters page");
            forceNavigateToLetters(navigate);
          } else {
            console.error("Failed to verify letter in storage after generation");
            toast({
              title: "Storage Error",
              description: "We had trouble saving your letter. Please try again.",
              variant: "destructive",
            });
          }
        }, 1000);
        
        return result;
      }
      
      console.error("Dispute generation returned invalid result:", result);
      toast({
        title: "Generation Failed",
        description: "There was a problem generating your dispute letter. Please try again.",
        variant: "destructive",
      });
      return { success: false };
      
    } catch (error) {
      console.error("Error in enhanced dispute generation:", error);
      toast({
        title: "Generation Error",
        description: "An error occurred while generating your dispute letter.",
        variant: "destructive",
      });
      return { success: false };
    }
  };

  const handleContinueToLetters = () => {
    sessionStorage.setItem('autoGeneratedLetter', 'true');
    sessionStorage.setItem('forceLettersReload', 'true');
    console.log("Setting required flags before navigating to letters page");
    
    forceNavigateToLetters(navigate);
  };

  return {
    letterGenerated,
    setLetterGenerated,
    handleDisputeGeneration,
    handleContinueToLetters
  };
};
